# File: azure-pipelines.yml

trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: Build
        displayName: 'Build Job'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
            displayName: 'Install Node.js'

          - script: |
              echo 'Installing dependencies...'
              npm ci
            displayName: 'Install Dependencies'

          - script: |
              echo 'Building application...'
              npm run build
            displayName: 'Build'

  - stage: Test
    displayName: 'Test Stage'
    dependsOn: Build
    jobs:
      - job: UnitTests
        displayName: 'Run Unit Tests'
        steps:
          - script: |
              echo 'Running unit tests...'
              npm run test:unit
            displayName: 'Unit Tests'

      - job: IntegrationTests
        displayName: 'Run Integration Tests'
        steps:
          - script: |
              echo 'Running integration tests...'
              npm run test:integration
            displayName: 'Integration Tests'

  - stage: Deploy
    displayName: 'Deployment Stage'
    dependsOn: Test
    jobs:
      - deployment: DeployWebApp
        displayName: 'Deploy to Web App'
        environment: 'production'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: 'd4fce81a-9251-410a-9e8e-fd84d4ed2d34'
                    appName: 'AzureDevopsDemo'
                    package: '$(Pipeline.Workspace)/Deployments'
                  displayName: 'Deploy to Web App'
                - task: CopyFiles@2
                  displayName: 'Copy app contents as artifact'
                  inputs:
                    SourceFolder: '$(Agent.WorkFolder)'
                    Contents: '$(Agent.WorkFolder)/Deployments/*'
                    TargetFolder: '$(Build.ArtifactStagingDirectory)'
                    CleanTargetFolder: false
                    overWrite: false
                    flattenFolders: false
                    preserveTimestamp: true
                - task: PublishBuildArtifacts@1
                  displayName: 'Publish build artifacts'
                  inputs:
                    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
                    artifactName: 'DeployedWebApp'
                    artifactType: 'container'
